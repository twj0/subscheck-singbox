# =============================================================================
# SubsCheck-Singbox v3.0 环境变量配置
# Python+Go混合架构的高性能代理节点测速工具
# =============================================================================
#
# 使用方法:
# 1. 复制此文件为 .env
# 2. 根据需要填写以下配置
# 3. 运行程序时会自动加载这些配置
#
# 注意: .env 文件包含敏感信息，请勿提交到代码仓库
# =============================================================================

# =============================================================================
# GitHub Gist 配置 (用于保存结果到 GitHub Gist)
# =============================================================================

# GitHub Personal Access Token (需要 gist 权限)
# 获取方式: https://github.com/settings/tokens -> Generate new token -> 勾选 gist
# 示例: ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
GITHUB_TOKEN=your_github_token_here

# GitHub Gist ID
# 获取方式: 创建一个空白 Gist -> 从 URL 中获取 ID
# 示例: 1234567890abcdef1234567890abcdef
GITHUB_GIST_ID=your_gist_id_here

# GitHub API 镜像 (可选，用于加速访问)
# 示例: https://api.github.com
GITHUB_API_MIRROR=

# =============================================================================
# WebDAV 配置 (用于保存结果到 WebDAV 服务器)
# =============================================================================

# WebDAV 服务器地址
# 示例: https://your-webdav-server.com/dav/
WEBDAV_URL=https://your-webdav-server.com/dav/

# WebDAV 用户名
# 示例: your_username
WEBDAV_USERNAME=your_username

# WebDAV 密码
# 示例: your_password
WEBDAV_PASSWORD=your_password

# =============================================================================
# S3/MinIO 配置 (用于保存结果到 S3/MinIO)
# =============================================================================

# S3/MinIO 服务器地址
# 示例: https://s3.amazonaws.com 或 http://localhost:9000
S3_ENDPOINT=

# S3/MinIO 访问密钥 ID
# 示例: AKIAIOSFODNN7EXAMPLE
S3_ACCESS_ID=

# S3/MinIO 访问密钥
# 示例: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
S3_SECRET_KEY=

# S3/MinIO 存储桶名称
# 示例: my-bucket
S3_BUCKET=

# 是否使用 SSL 连接
# 示例: true 或 false
S3_USE_SSL=false

# =============================================================================
# 代理配置 (如果需要通过代理访问订阅链接)
# =============================================================================

# HTTP 代理地址
# 示例: http://127.0.0.1:7890
HTTP_PROXY=

# HTTPS 代理地址
# 示例: http://127.0.0.1:7890
HTTPS_PROXY=

# =============================================================================
# 调试和日志配置
# =============================================================================

# 调试模式 (设置为 true 启用详细日志)
# 示例: true 或 false
DEBUG=false

# 日志级别 (DEBUG, INFO, WARNING, ERROR)
# 示例: INFO
LOG_LEVEL=INFO

# =============================================================================
# 通知配置
# =============================================================================

# 通用 Webhook 通知 URL
# 示例: https://your-webhook-url.com/notify
NOTIFY_WEBHOOK_URL=

# Telegram Bot 通知
# 获取方式: 与 @BotFather 对话创建机器人 -> 获取 token
# 示例: 1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789
TELEGRAM_BOT_TOKEN=

# Telegram 聊天 ID
# 获取方式: 与 @userinfobot 对话获取
# 示例: 123456789
TELEGRAM_CHAT_ID=

# Bark 通知 (iOS 推送)
# 示例: https://api.day.app/YOUR_BARK_KEY
BARK_URL=

# Server酱通知 (微信推送)
# 示例: https://sctapi.ftqq.com/YOUR_SCT_KEY.send
SERVERCHAN_URL=

# =============================================================================
# 其他配置
# =============================================================================

# 测试模式 (仅测试前 N 个节点)
# 示例: 10
TEST_LIMIT=

# 跳过测试 (设置为 true 仅解析订阅，不进行测试)
# 示例: false
SKIP_TEST=false

# 自定义 DNS 服务器 (可选)
# 示例: 8.8.8.8,1.1.1.1
CUSTOM_DNS=

# =============================================================================
# 配置示例
# =============================================================================

# GitHub Gist 示例:
# GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# GITHUB_GIST_ID=1234567890abcdef1234567890abcdef
#
# WebDAV 示例:
# WEBDAV_URL=https://dav.example.com/dav/
# WEBDAV_USERNAME=your_username
# WEBDAV_PASSWORD=your_password
#
# 代理示例:
# HTTP_PROXY=http://127.0.0.1:7890
# HTTPS_PROXY=http://127.0.0.1:7890
#
# Telegram 通知示例:
# TELEGRAM_BOT_TOKEN=1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789
# TELEGRAM_CHAT_ID=123456789
#
# =============================================================================
